<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier" kind="class" language="C++" prot="public">
    <compoundname>CMLibs::Zinc::Spectrummodulenotifier</compoundname>
    <includes refid="spectrum_8hpp" local="no">spectrum.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier_1abe415fb9a210b4004a6b4dae35f4efda" prot="protected" static="no" mutable="no">
        <type>cmzn_spectrummodulenotifier_id</type>
        <definition>cmzn_spectrummodulenotifier_id CMLibs::Zinc::Spectrummodulenotifier::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/spectrum.hpp" line="1367" column="32" bodyfile="auto_comments_output/spectrum.hpp" bodystart="1367" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier_1aeb74626a966ce44cde7a3aa2eb844b06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CMLibs::Zinc::Spectrummodulenotifier::Spectrummodulenotifier</definition>
        <argsstring>()</argsstring>
        <name>Spectrummodulenotifier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/spectrum.hpp" line="1371" column="1" bodyfile="auto_comments_output/spectrum.hpp" bodystart="1371" bodyend="1372"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier_1a2cf36dca462ab53efc22e9d661e38248" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CMLibs::Zinc::Spectrummodulenotifier::Spectrummodulenotifier</definition>
        <argsstring>(cmzn_spectrummodulenotifier_id in_spectrummodulenotifier_id)</argsstring>
        <name>Spectrummodulenotifier</name>
        <param>
          <type>cmzn_spectrummodulenotifier_id</type>
          <declname>in_spectrummodulenotifier_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/spectrum.hpp" line="1375" column="10" bodyfile="auto_comments_output/spectrum.hpp" bodystart="1375" bodyend="1377"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier_1ad41f379a1c80b2a82f4272a7681b877a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CMLibs::Zinc::Spectrummodulenotifier::Spectrummodulenotifier</definition>
        <argsstring>(const Spectrummodulenotifier &amp;spectrummoduleNotifier)</argsstring>
        <name>Spectrummodulenotifier</name>
        <param>
          <type>const <ref refid="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier" kindref="compound">Spectrummodulenotifier</ref> &amp;</type>
          <declname>spectrummoduleNotifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/spectrum.hpp" line="1379" column="1" bodyfile="auto_comments_output/spectrum.hpp" bodystart="1379" bodyend="1381"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier_1a25bdfb79895f583eba0f6d44b325b8ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier" kindref="compound">Spectrummodulenotifier</ref> &amp;</type>
        <definition>Spectrummodulenotifier&amp; CMLibs::Zinc::Spectrummodulenotifier::operator=</definition>
        <argsstring>(const Spectrummodulenotifier &amp;spectrummoduleNotifier)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier" kindref="compound">Spectrummodulenotifier</ref> &amp;</type>
          <declname>spectrummoduleNotifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/spectrum.hpp" line="1383" column="24" bodyfile="auto_comments_output/spectrum.hpp" bodystart="1383" bodyend="1392"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier_1aa14d954838e2a3fe51bcabedd401f6c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CMLibs::Zinc::Spectrummodulenotifier::~Spectrummodulenotifier</definition>
        <argsstring>()</argsstring>
        <name>~Spectrummodulenotifier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/spectrum.hpp" line="1394" column="1" bodyfile="auto_comments_output/spectrum.hpp" bodystart="1394" bodyend="1400"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier_1a47686eab163e3b137458aaa5572c2d2d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CMLibs::Zinc::Spectrummodulenotifier::isValid</definition>
        <argsstring>() const</argsstring>
        <name>isValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if this is a valid <ref refid="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier" kindref="compound">Spectrummodulenotifier</ref> object.</para>
<para><simplesect kind="return"><para>Status True if object is valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/spectrum.hpp" line="1407" column="6" bodyfile="auto_comments_output/spectrum.hpp" bodystart="1407" bodyend="1410"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier_1ab33b6434a97716716b3b44028a67be29" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>cmzn_spectrummodulenotifier_id</type>
        <definition>cmzn_spectrummodulenotifier_id CMLibs::Zinc::Spectrummodulenotifier::getId</definition>
        <argsstring>() const</argsstring>
        <name>getId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the C handle of the <ref refid="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier" kindref="compound">Spectrummodulenotifier</ref> object.</para>
<para><simplesect kind="return"><para>C handle of <ref refid="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier" kindref="compound">Spectrummodulenotifier</ref> if this objects is valid, 0 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/spectrum.hpp" line="1417" column="32" bodyfile="auto_comments_output/spectrum.hpp" bodystart="1417" bodyend="1420"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier_1a29b8856f22adb7fbd9fd5e0dc8e12792" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CMLibs::Zinc::Spectrummodulenotifier::setCallback</definition>
        <argsstring>(Spectrummodulecallback &amp;callback)</argsstring>
        <name>setCallback</name>
        <param>
          <type><ref refid="classCMLibs_1_1Zinc_1_1Spectrummodulecallback" kindref="compound">Spectrummodulecallback</ref> &amp;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assign the callback function and user data for the spectrummodule notifier. This function also starts the callback.</para>
<para><simplesect kind="see"><para>cmzn_spectrummodulenotifier_callback_function </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>function to be called when event is triggered. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data_in</parametername>
</parameternamelist>
<parameterdescription>
<para>Void pointer to user object. User must ensure this object&apos;s lifetime exceeds the duration for which callbacks are active. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status <ref refid="namespaceCMLibs_1_1Zinc_1af8a9881f3a06e3e24858b11ddb3f6de9a4f1327b31c1f572158bfee8728e553e8" kindref="member">CMLibs::Zinc::OK</ref> on success, any other value on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/spectrum.hpp" line="1432" column="5" bodyfile="auto_comments_output/spectrum.hpp" bodystart="1432" bodyend="1435"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier_1a175a192888580111a13c0e1218d202fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CMLibs::Zinc::Spectrummodulenotifier::clearCallback</definition>
        <argsstring>()</argsstring>
        <name>clearCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stop and clear spectrum module callback. This will stop the callback and also remove the callback function from the spectrummodule notifier.</para>
<para><simplesect kind="return"><para>Status <ref refid="namespaceCMLibs_1_1Zinc_1af8a9881f3a06e3e24858b11ddb3f6de9a4f1327b31c1f572158bfee8728e553e8" kindref="member">CMLibs::Zinc::OK</ref> on success, any other value on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/spectrum.hpp" line="1443" column="5" bodyfile="auto_comments_output/spectrum.hpp" bodystart="1443" bodyend="1446"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Manages individual user notification of changes with a spectrum module. </para>
    </briefdescription>
    <detaileddescription>
<para>Manages individual user notification of changes with a spectrum module. </para>
    </detaileddescription>
    <location file="auto_comments_output/spectrum.hpp" line="1365" column="1" bodyfile="auto_comments_output/spectrum.hpp" bodystart="1364" bodyend="1447"/>
    <listofallmembers>
      <member refid="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier_1a175a192888580111a13c0e1218d202fc" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Spectrummodulenotifier</scope><name>clearCallback</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier_1ab33b6434a97716716b3b44028a67be29" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Spectrummodulenotifier</scope><name>getId</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier_1abe415fb9a210b4004a6b4dae35f4efda" prot="protected" virt="non-virtual"><scope>CMLibs::Zinc::Spectrummodulenotifier</scope><name>id</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier_1a47686eab163e3b137458aaa5572c2d2d" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Spectrummodulenotifier</scope><name>isValid</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier_1a25bdfb79895f583eba0f6d44b325b8ae" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Spectrummodulenotifier</scope><name>operator=</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier_1a29b8856f22adb7fbd9fd5e0dc8e12792" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Spectrummodulenotifier</scope><name>setCallback</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier_1aeb74626a966ce44cde7a3aa2eb844b06" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Spectrummodulenotifier</scope><name>Spectrummodulenotifier</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier_1a2cf36dca462ab53efc22e9d661e38248" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Spectrummodulenotifier</scope><name>Spectrummodulenotifier</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier_1ad41f379a1c80b2a82f4272a7681b877a" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Spectrummodulenotifier</scope><name>Spectrummodulenotifier</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Spectrummodulenotifier_1aa14d954838e2a3fe51bcabedd401f6c0" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Spectrummodulenotifier</scope><name>~Spectrummodulenotifier</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
