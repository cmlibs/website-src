<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classCMLibs_1_1Zinc_1_1Elementiterator" kind="class" language="C++" prot="public">
    <compoundname>CMLibs::Zinc::Elementiterator</compoundname>
    <includes refid="element_8hpp" local="no">element.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCMLibs_1_1Zinc_1_1Elementiterator_1a598ca61beedbec5556c5c3bc92c3b943" prot="private" static="no" mutable="no">
        <type>cmzn_elementiterator_id</type>
        <definition>cmzn_elementiterator_id CMLibs::Zinc::Elementiterator::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/element.hpp" line="467" column="25" bodyfile="auto_comments_output/element.hpp" bodystart="467" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Elementiterator_1a52a4d07555d1ddf29d12b356ea0fca60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CMLibs::Zinc::Elementiterator::Elementiterator</definition>
        <argsstring>()</argsstring>
        <name>Elementiterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/element.hpp" line="471" column="1" bodyfile="auto_comments_output/element.hpp" bodystart="471" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Elementiterator_1ad525cf42036470305baa6c1aec84a757" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CMLibs::Zinc::Elementiterator::Elementiterator</definition>
        <argsstring>(cmzn_elementiterator_id element_iterator_id)</argsstring>
        <name>Elementiterator</name>
        <param>
          <type>cmzn_elementiterator_id</type>
          <declname>element_iterator_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/element.hpp" line="475" column="10" bodyfile="auto_comments_output/element.hpp" bodystart="475" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Elementiterator_1a8851e3b5fff8e35fb58622f9254a6e68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CMLibs::Zinc::Elementiterator::Elementiterator</definition>
        <argsstring>(const Elementiterator &amp;elementIterator)</argsstring>
        <name>Elementiterator</name>
        <param>
          <type>const <ref refid="classCMLibs_1_1Zinc_1_1Elementiterator" kindref="compound">Elementiterator</ref> &amp;</type>
          <declname>elementIterator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/element.hpp" line="479" column="1" bodyfile="auto_comments_output/element.hpp" bodystart="479" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Elementiterator_1a661f1b98aa44eca40207c1351d3e4927" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCMLibs_1_1Zinc_1_1Elementiterator" kindref="compound">Elementiterator</ref> &amp;</type>
        <definition>Elementiterator&amp; CMLibs::Zinc::Elementiterator::operator=</definition>
        <argsstring>(const Elementiterator &amp;elementIterator)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classCMLibs_1_1Zinc_1_1Elementiterator" kindref="compound">Elementiterator</ref> &amp;</type>
          <declname>elementIterator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/element.hpp" line="483" column="17" bodyfile="auto_comments_output/element.hpp" bodystart="483" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Elementiterator_1a1da0df6a4a95f9862944795162deee77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CMLibs::Zinc::Elementiterator::~Elementiterator</definition>
        <argsstring>()</argsstring>
        <name>~Elementiterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/element.hpp" line="494" column="1" bodyfile="auto_comments_output/element.hpp" bodystart="494" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Elementiterator_1a332af28bd516c3f2dffb96a0cb639509" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CMLibs::Zinc::Elementiterator::isValid</definition>
        <argsstring>() const</argsstring>
        <name>isValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if this is a valid <ref refid="classCMLibs_1_1Zinc_1_1Elementiterator" kindref="compound">Elementiterator</ref> object.</para>
<para><simplesect kind="return"><para>Status True if object is valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/element.hpp" line="507" column="6" bodyfile="auto_comments_output/element.hpp" bodystart="507" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Elementiterator_1a284df18e75e2bc001c4631607b4e83ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCMLibs_1_1Zinc_1_1Element" kindref="compound">Element</ref></type>
        <definition>Element CMLibs::Zinc::Elementiterator::next</definition>
        <argsstring>()</argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a handle to the next element in the container being iterated over then advances the iterator position. The caller is required to destroy the returned element handle.</para>
<para><simplesect kind="return"><para>Handle to next element, or NULL/invalid handle if none or failed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/element.hpp" line="519" column="9" bodyfile="auto_comments_output/element.hpp" bodystart="519" bodyend="522"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An iterator for looping through all the elements in a mesh. </para>
    </briefdescription>
    <detaileddescription>
<para>An iterator for looping through all the elements in a mesh. </para>
    </detaileddescription>
    <location file="auto_comments_output/element.hpp" line="464" column="1" bodyfile="auto_comments_output/element.hpp" bodystart="463" bodyend="523"/>
    <listofallmembers>
      <member refid="classCMLibs_1_1Zinc_1_1Elementiterator_1a52a4d07555d1ddf29d12b356ea0fca60" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Elementiterator</scope><name>Elementiterator</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Elementiterator_1ad525cf42036470305baa6c1aec84a757" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Elementiterator</scope><name>Elementiterator</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Elementiterator_1a8851e3b5fff8e35fb58622f9254a6e68" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Elementiterator</scope><name>Elementiterator</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Elementiterator_1a598ca61beedbec5556c5c3bc92c3b943" prot="private" virt="non-virtual"><scope>CMLibs::Zinc::Elementiterator</scope><name>id</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Elementiterator_1a332af28bd516c3f2dffb96a0cb639509" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Elementiterator</scope><name>isValid</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Elementiterator_1a284df18e75e2bc001c4631607b4e83ba" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Elementiterator</scope><name>next</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Elementiterator_1a661f1b98aa44eca40207c1351d3e4927" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Elementiterator</scope><name>operator=</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Elementiterator_1a1da0df6a4a95f9862944795162deee77" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Elementiterator</scope><name>~Elementiterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
