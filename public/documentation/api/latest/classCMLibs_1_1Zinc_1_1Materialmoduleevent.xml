<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classCMLibs_1_1Zinc_1_1Materialmoduleevent" kind="class" language="C++" prot="public">
    <compoundname>CMLibs::Zinc::Materialmoduleevent</compoundname>
    <includes refid="material_8hpp" local="no">material.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classCMLibs_1_1Zinc_1_1Materialmoduleevent_1a0c87c97211c945cbaba91b86c0b7ab2b" prot="protected" static="no" mutable="no">
        <type>cmzn_materialmoduleevent_id</type>
        <definition>cmzn_materialmoduleevent_id CMLibs::Zinc::Materialmoduleevent::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/material.hpp" line="698" column="29" bodyfile="auto_comments_output/material.hpp" bodystart="698" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Materialmoduleevent_1aca33115d62b6627c53dd57a4e8821727" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CMLibs::Zinc::Materialmoduleevent::Materialmoduleevent</definition>
        <argsstring>()</argsstring>
        <name>Materialmoduleevent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/material.hpp" line="702" column="1" bodyfile="auto_comments_output/material.hpp" bodystart="702" bodyend="703"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Materialmoduleevent_1abbe31db0a09651c11c657b07a01bc275" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CMLibs::Zinc::Materialmoduleevent::Materialmoduleevent</definition>
        <argsstring>(cmzn_materialmoduleevent_id in_materialmodule_event_id)</argsstring>
        <name>Materialmoduleevent</name>
        <param>
          <type>cmzn_materialmoduleevent_id</type>
          <declname>in_materialmodule_event_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/material.hpp" line="706" column="10" bodyfile="auto_comments_output/material.hpp" bodystart="706" bodyend="708"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Materialmoduleevent_1afac86999efdaedc468e76232e264dbbf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CMLibs::Zinc::Materialmoduleevent::Materialmoduleevent</definition>
        <argsstring>(const Materialmoduleevent &amp;materialmoduleEvent)</argsstring>
        <name>Materialmoduleevent</name>
        <param>
          <type>const <ref refid="classCMLibs_1_1Zinc_1_1Materialmoduleevent" kindref="compound">Materialmoduleevent</ref> &amp;</type>
          <declname>materialmoduleEvent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/material.hpp" line="710" column="1" bodyfile="auto_comments_output/material.hpp" bodystart="710" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Materialmoduleevent_1a5ac1af45dd59dd2a60a0e53d3d584c6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCMLibs_1_1Zinc_1_1Materialmoduleevent" kindref="compound">Materialmoduleevent</ref> &amp;</type>
        <definition>Materialmoduleevent&amp; CMLibs::Zinc::Materialmoduleevent::operator=</definition>
        <argsstring>(const Materialmoduleevent &amp;materialmoduleEvent)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classCMLibs_1_1Zinc_1_1Materialmoduleevent" kindref="compound">Materialmoduleevent</ref> &amp;</type>
          <declname>materialmoduleEvent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/material.hpp" line="714" column="21" bodyfile="auto_comments_output/material.hpp" bodystart="714" bodyend="721"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Materialmoduleevent_1aff5c6365aa21e967a4106e7ac3a9afe5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CMLibs::Zinc::Materialmoduleevent::~Materialmoduleevent</definition>
        <argsstring>()</argsstring>
        <name>~Materialmoduleevent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/material.hpp" line="723" column="1" bodyfile="auto_comments_output/material.hpp" bodystart="723" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Materialmoduleevent_1ad1f8f19153f2dd8ec7651e502c154e7d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CMLibs::Zinc::Materialmoduleevent::isValid</definition>
        <argsstring>() const</argsstring>
        <name>isValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if this is a valid <ref refid="classCMLibs_1_1Zinc_1_1Materialmoduleevent" kindref="compound">Materialmoduleevent</ref> object.</para>
<para><simplesect kind="return"><para>Status True if object is valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/material.hpp" line="736" column="6" bodyfile="auto_comments_output/material.hpp" bodystart="736" bodyend="739"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Materialmoduleevent_1a468f5597677bda7b5afd38bc75d6c8c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>cmzn_materialmoduleevent_id</type>
        <definition>cmzn_materialmoduleevent_id CMLibs::Zinc::Materialmoduleevent::getId</definition>
        <argsstring>() const</argsstring>
        <name>getId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the C handle of the <ref refid="classCMLibs_1_1Zinc_1_1Materialmoduleevent" kindref="compound">Materialmoduleevent</ref> object.</para>
<para><simplesect kind="return"><para>C handle of <ref refid="classCMLibs_1_1Zinc_1_1Materialmoduleevent" kindref="compound">Materialmoduleevent</ref> if this objects is valid, 0 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/material.hpp" line="746" column="29" bodyfile="auto_comments_output/material.hpp" bodystart="746" bodyend="749"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Materialmoduleevent_1a92c8185a88cdefb37d4dfaca19dcec82" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCMLibs_1_1Zinc_1_1Material_1a4e7c67acec72b0421a91eb82f2d8d427" kindref="member">Material::ChangeFlags</ref></type>
        <definition>Material::ChangeFlags CMLibs::Zinc::Materialmoduleevent::getMaterialChangeFlags</definition>
        <argsstring>(const Material &amp;material) const</argsstring>
        <name>getMaterialChangeFlags</name>
        <param>
          <type>const <ref refid="classCMLibs_1_1Zinc_1_1Material" kindref="compound">Material</ref> &amp;</type>
          <declname>material</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get logical OR of flags indicating how the material has changed. <simplesect kind="see"><para><ref refid="classCMLibs_1_1Zinc_1_1Material_1ad3e64d946cd8b08973a917994f504fa6" kindref="member">Material::ChangeFlag</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>material</parametername>
</parameternamelist>
<parameterdescription>
<para>The material to query about. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The change flags summarising the change: logical OR of enum <ref refid="classCMLibs_1_1Zinc_1_1Material_1ad3e64d946cd8b08973a917994f504fa6" kindref="member">Material::ChangeFlag</ref> values. Returns CMZN_MATERIAL_CHANGE_FLAG_NONE in case of invalid arguments. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/material.hpp" line="760" column="23" bodyfile="auto_comments_output/material.hpp" bodystart="760" bodyend="763"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Materialmoduleevent_1a653e29b82d655f6ae100f5d64cc554e6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCMLibs_1_1Zinc_1_1Material_1a4e7c67acec72b0421a91eb82f2d8d427" kindref="member">Material::ChangeFlags</ref></type>
        <definition>Material::ChangeFlags CMLibs::Zinc::Materialmoduleevent::getSummaryMaterialChangeFlags</definition>
        <argsstring>() const</argsstring>
        <name>getSummaryMaterialChangeFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get logical OR of flags indicating how materials in the material module have changed.</para>
<para><simplesect kind="see"><para><ref refid="classCMLibs_1_1Zinc_1_1Material_1ad3e64d946cd8b08973a917994f504fa6" kindref="member">Material::ChangeFlag</ref> </para>
</simplesect>
<simplesect kind="return"><para>The change flags summarising the change: logical OR of enum <ref refid="classCMLibs_1_1Zinc_1_1Material_1ad3e64d946cd8b08973a917994f504fa6" kindref="member">Material::ChangeFlag</ref> values. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/material.hpp" line="773" column="23" bodyfile="auto_comments_output/material.hpp" bodystart="773" bodyend="776"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Information about changes to materials in the material module. </para>
    </briefdescription>
    <detaileddescription>
<para>Information about changes to materials in the material module, sent with each callback from the materialmodule notifier. </para>
    </detaileddescription>
    <location file="auto_comments_output/material.hpp" line="696" column="1" bodyfile="auto_comments_output/material.hpp" bodystart="695" bodyend="778"/>
    <listofallmembers>
      <member refid="classCMLibs_1_1Zinc_1_1Materialmoduleevent_1a468f5597677bda7b5afd38bc75d6c8c8" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Materialmoduleevent</scope><name>getId</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Materialmoduleevent_1a92c8185a88cdefb37d4dfaca19dcec82" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Materialmoduleevent</scope><name>getMaterialChangeFlags</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Materialmoduleevent_1a653e29b82d655f6ae100f5d64cc554e6" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Materialmoduleevent</scope><name>getSummaryMaterialChangeFlags</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Materialmoduleevent_1a0c87c97211c945cbaba91b86c0b7ab2b" prot="protected" virt="non-virtual"><scope>CMLibs::Zinc::Materialmoduleevent</scope><name>id</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Materialmoduleevent_1ad1f8f19153f2dd8ec7651e502c154e7d" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Materialmoduleevent</scope><name>isValid</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Materialmoduleevent_1aca33115d62b6627c53dd57a4e8821727" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Materialmoduleevent</scope><name>Materialmoduleevent</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Materialmoduleevent_1abbe31db0a09651c11c657b07a01bc275" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Materialmoduleevent</scope><name>Materialmoduleevent</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Materialmoduleevent_1afac86999efdaedc468e76232e264dbbf" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Materialmoduleevent</scope><name>Materialmoduleevent</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Materialmoduleevent_1a5ac1af45dd59dd2a60a0e53d3d584c6c" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Materialmoduleevent</scope><name>operator=</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Materialmoduleevent_1aff5c6365aa21e967a4106e7ac3a9afe5" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Materialmoduleevent</scope><name>~Materialmoduleevent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
