<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classCMLibs_1_1Zinc_1_1StreaminformationScene" kind="class" language="C++" prot="public">
    <compoundname>CMLibs::Zinc::StreaminformationScene</compoundname>
    <basecompoundref refid="classCMLibs_1_1Zinc_1_1Streaminformation" prot="public" virt="non-virtual">CMLibs::Zinc::Streaminformation</basecompoundref>
    <includes refid="streamscene_8hpp" local="no">streamscene.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a06001430a3d0d27aa00f618ae044b2a1" prot="public" static="no" strong="no">
        <type></type>
        <name>IODataType</name>
        <enumvalue id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a06001430a3d0d27aa00f618ae044b2a1a66a22e2ec7004ea3583aa1b99f447d00" prot="public">
          <name>IO_DATA_TYPE_INVALID</name>
          <initializer>= CMZN_STREAMINFORMATION_SCENE_IO_DATA_TYPE_INVALID</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Unspecified type </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a06001430a3d0d27aa00f618ae044b2a1a34c0d16de4add6ba4db7ba5a78acf019" prot="public">
          <name>IO_DATA_TYPE_COLOUR</name>
          <initializer>= CMZN_STREAMINFORMATION_SCENE_IO_DATA_TYPE_COLOUR</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Export data as colour </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a06001430a3d0d27aa00f618ae044b2a1aad5b9ab1724c0da5111878af9bc80421" prot="public">
          <name>IO_DATA_TYPE_PER_VERTEX_VALUE</name>
          <initializer>= CMZN_STREAMINFORMATION_SCENE_IO_DATA_TYPE_PER_VERTEX_VALUE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Export data as field value on per vertex basis </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a06001430a3d0d27aa00f618ae044b2a1ae4323a2c15a871a6f3bf3179ebce99d5" prot="public">
          <name>IO_DATA_TYPE_PER_FACE_VALUE</name>
          <initializer>= CMZN_STREAMINFORMATION_SCENE_IO_DATA_TYPE_PER_FACE_VALUE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Export data as field value on per face basis </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumeration to indicate what the data should written out as. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="68" column="1" bodyfile="auto_comments_output/streamscene.hpp" bodystart="67" bodyend="77"/>
      </memberdef>
      <memberdef kind="enum" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1aa4dc541fe93b2719f9a620b5c1f8033f" prot="public" static="no" strong="no">
        <type></type>
        <name>IOFormat</name>
        <enumvalue id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1aa4dc541fe93b2719f9a620b5c1f8033fa74ba52bf3e708b3e3a18cb060378c7a2" prot="public">
          <name>IO_FORMAT_INVALID</name>
          <initializer>= CMZN_STREAMINFORMATION_SCENE_IO_FORMAT_INVALID</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Unspecified attribute </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1aa4dc541fe93b2719f9a620b5c1f8033fae17fc69790b739fb525cab796e4b44aa" prot="public">
          <name>IO_FORMAT_THREEJS</name>
          <initializer>= CMZN_STREAMINFORMATION_SCENE_IO_FORMAT_THREEJS</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Export scene into ThreeJS compatible JSON file. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1aa4dc541fe93b2719f9a620b5c1f8033faafa027455cd68e08dec8ea3ea3f883ac" prot="public">
          <name>IO_FORMAT_DESCRIPTION</name>
          <initializer>= CMZN_STREAMINFORMATION_SCENE_IO_FORMAT_DESCRIPTION</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Import/export scene configurations into the scene </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1aa4dc541fe93b2719f9a620b5c1f8033fa4565f19ca4885e4121f18be90a1b31bb" prot="public">
          <name>IO_FORMAT_ASCII_STL</name>
          <initializer>= CMZN_STREAMINFORMATION_SCENE_IO_FORMAT_ASCII_STL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Export scene into STL text file. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1aa4dc541fe93b2719f9a620b5c1f8033fad13a41ecee0ded665e685167dccd4bac" prot="public">
          <name>IO_FORMAT_WAVEFRONT</name>
          <initializer>= CMZN_STREAMINFORMATION_SCENE_IO_FORMAT_WAVEFRONT</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Export scene into wavefront file. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumeration of attributes that can be set by generic stream information region methods. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="84" column="1" bodyfile="auto_comments_output/streamscene.hpp" bodystart="83" bodyend="95"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a032858ae1fe02d2d1170981c2af2d67c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Scene</definition>
        <argsstring></argsstring>
        <name>Scene</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="33" column="1" bodyfile="auto_comments_output/streamscene.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a107b19a59a36e137299a9090ea4c4197" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>cmzn_streaminformation_scene_id</type>
        <definition>cmzn_streaminformation_scene_id CMLibs::Zinc::StreaminformationScene::getDerivedId</definition>
        <argsstring>() const</argsstring>
        <name>getDerivedId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the C handle of the derived <ref refid="classCMLibs_1_1Zinc_1_1StreaminformationScene" kindref="compound">StreaminformationScene</ref> object.</para>
<para><simplesect kind="return"><para>C handle of the derived <ref refid="classCMLibs_1_1Zinc_1_1StreaminformationScene" kindref="compound">StreaminformationScene</ref> if this objects is valid, 0 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="40" column="33" bodyfile="auto_comments_output/streamscene.hpp" bodystart="40" bodyend="43"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a4156eab026abb0162c2e4073c6f05afd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CMLibs::Zinc::StreaminformationScene::StreaminformationScene</definition>
        <argsstring>()</argsstring>
        <name>StreaminformationScene</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="46" column="1" bodyfile="auto_comments_output/streamscene.hpp" bodystart="46" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1afd9774161b69244dc44c7c9bc69ada04" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CMLibs::Zinc::StreaminformationScene::StreaminformationScene</definition>
        <argsstring>(cmzn_streaminformation_scene_id streaminformation_scene_id)</argsstring>
        <name>StreaminformationScene</name>
        <param>
          <type>cmzn_streaminformation_scene_id</type>
          <declname>streaminformation_scene_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="50" column="10" bodyfile="auto_comments_output/streamscene.hpp" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a94733986c87e838106bd14c838cc2b62" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CMLibs::Zinc::StreaminformationScene::isValid</definition>
        <argsstring>() const</argsstring>
        <name>isValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if this is a valid <ref refid="classCMLibs_1_1Zinc_1_1StreaminformationScene" kindref="compound">StreaminformationScene</ref> object.</para>
<para><simplesect kind="return"><para>Status True if object is valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="59" column="6" bodyfile="auto_comments_output/streamscene.hpp" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a6a1849e5a4a3337dfede0c1913e09d66" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCMLibs_1_1Zinc_1_1Scenefilter" kindref="compound">Scenefilter</ref></type>
        <definition>Scenefilter CMLibs::Zinc::StreaminformationScene::getScenefilter</definition>
        <argsstring>() const</argsstring>
        <name>getScenefilter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the scenefilter that is set for this streaminformation</para>
<para><simplesect kind="return"><para>Handle to scene filter, or NULL/invalid handle if none or failed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="102" column="13" bodyfile="auto_comments_output/streamscene.hpp" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a51bab814620d4a36ea9c2657fd297483" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CMLibs::Zinc::StreaminformationScene::setScenefilter</definition>
        <argsstring>(const Scenefilter &amp;scenefilter)</argsstring>
        <name>setScenefilter</name>
        <param>
          <type>const <ref refid="classCMLibs_1_1Zinc_1_1Scenefilter" kindref="compound">Scenefilter</ref> &amp;</type>
          <declname>scenefilter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the scenefilter for the streaminformation_scene. This filter determines which graphics are included in the export.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scenefilter</parametername>
</parameternamelist>
<parameterdescription>
<para>The scene filter to use, or NULL if none (all enable). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status <ref refid="namespaceCMLibs_1_1Zinc_1af8a9881f3a06e3e24858b11ddb3f6de9a4f1327b31c1f572158bfee8728e553e8" kindref="member">CMLibs::Zinc::OK</ref> on success, any other value on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="114" column="5" bodyfile="auto_comments_output/streamscene.hpp" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1af99af99f99986ebd6fb982972eb23ef7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a06001430a3d0d27aa00f618ae044b2a1" kindref="member">IODataType</ref></type>
        <definition>IODataType CMLibs::Zinc::StreaminformationScene::getIODataType</definition>
        <argsstring>() const</argsstring>
        <name>getIODataType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="119" column="12" bodyfile="auto_comments_output/streamscene.hpp" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1ab4d8c3e14111f0a54dbb9012b8bc17d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CMLibs::Zinc::StreaminformationScene::setIODataType</definition>
        <argsstring>(IODataType ioDataType)</argsstring>
        <name>setIODataType</name>
        <param>
          <type><ref refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a06001430a3d0d27aa00f618ae044b2a1" kindref="member">IODataType</ref></type>
          <declname>ioDataType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="124" column="5" bodyfile="auto_comments_output/streamscene.hpp" bodystart="124" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a39ddef9c6b516d3a3d7d4b7402517d3b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1aa4dc541fe93b2719f9a620b5c1f8033f" kindref="member">IOFormat</ref></type>
        <definition>IOFormat CMLibs::Zinc::StreaminformationScene::getIOFormat</definition>
        <argsstring>() const</argsstring>
        <name>getIOFormat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="130" column="10" bodyfile="auto_comments_output/streamscene.hpp" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a5f91c28eb7108592cd1688eddf721279" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CMLibs::Zinc::StreaminformationScene::setIOFormat</definition>
        <argsstring>(IOFormat ioFormat)</argsstring>
        <name>setIOFormat</name>
        <param>
          <type><ref refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1aa4dc541fe93b2719f9a620b5c1f8033f" kindref="member">IOFormat</ref></type>
          <declname>ioFormat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="135" column="5" bodyfile="auto_comments_output/streamscene.hpp" bodystart="135" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a1bd4b35897dfc281efffa8487f1ad5e0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CMLibs::Zinc::StreaminformationScene::getNumberOfTimeSteps</definition>
        <argsstring>() const</argsstring>
        <name>getNumberOfTimeSteps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of time steps to export.</para>
<para><simplesect kind="return"><para>positive integer number on success, 0 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="146" column="5" bodyfile="auto_comments_output/streamscene.hpp" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1acb14e99662d53263af7b5df732a3fd44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CMLibs::Zinc::StreaminformationScene::setNumberOfTimeSteps</definition>
        <argsstring>(int numberOfTimeSteps)</argsstring>
        <name>setNumberOfTimeSteps</name>
        <param>
          <type>int</type>
          <declname>numberOfTimeSteps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the number of time steps to export. This value along with finish time and initial time will determine at which time steps the graphics will be export. If initial time = 0.0, finish time = 1.0 and number of time steps = 11; graphics will be export at 0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9 and 1.0. <simplesect kind="see"><para><ref refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a3a1feadafd2b0519a38c71ca7a35a3fc" kindref="member">StreaminformationScene::setFinishTime</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1ae32d7fd09992702e7b5b826f0ad0b123" kindref="member">StreaminformationScene::setInitialTime</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numberOfTimeSteps</parametername>
</parameternamelist>
<parameterdescription>
<para>number of time steps to be set for export. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status <ref refid="namespaceCMLibs_1_1Zinc_1af8a9881f3a06e3e24858b11ddb3f6de9a4f1327b31c1f572158bfee8728e553e8" kindref="member">CMLibs::Zinc::OK</ref> on success, any other value on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="163" column="5" bodyfile="auto_comments_output/streamscene.hpp" bodystart="163" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a12aa58ba6649726d2a555dcc640f8e1c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double CMLibs::Zinc::StreaminformationScene::getFinishTime</definition>
        <argsstring>() const</argsstring>
        <name>getFinishTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the last time step to export.</para>
<para><simplesect kind="return"><para>positive integer number on success, 0 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="173" column="8" bodyfile="auto_comments_output/streamscene.hpp" bodystart="173" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a3a1feadafd2b0519a38c71ca7a35a3fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CMLibs::Zinc::StreaminformationScene::setFinishTime</definition>
        <argsstring>(double finishTime)</argsstring>
        <name>setFinishTime</name>
        <param>
          <type>double</type>
          <declname>finishTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the last time step to export.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>finishTime</parametername>
</parameternamelist>
<parameterdescription>
<para>last time step to be set for export. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status <ref refid="namespaceCMLibs_1_1Zinc_1af8a9881f3a06e3e24858b11ddb3f6de9a4f1327b31c1f572158bfee8728e553e8" kindref="member">CMLibs::Zinc::OK</ref> on success, any other value on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="184" column="5" bodyfile="auto_comments_output/streamscene.hpp" bodystart="184" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a54db6c294d406e1a5d1d69afad5dae81" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double CMLibs::Zinc::StreaminformationScene::getInitialTime</definition>
        <argsstring>() const</argsstring>
        <name>getInitialTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the first time step to export.</para>
<para><simplesect kind="return"><para>positive integer number on success, 0 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="194" column="8" bodyfile="auto_comments_output/streamscene.hpp" bodystart="194" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1ae32d7fd09992702e7b5b826f0ad0b123" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CMLibs::Zinc::StreaminformationScene::setInitialTime</definition>
        <argsstring>(double initialTime)</argsstring>
        <name>setInitialTime</name>
        <param>
          <type>double</type>
          <declname>initialTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the first time step to export.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>initialTime</parametername>
</parameternamelist>
<parameterdescription>
<para>first time step to be set for export. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status <ref refid="namespaceCMLibs_1_1Zinc_1af8a9881f3a06e3e24858b11ddb3f6de9a4f1327b31c1f572158bfee8728e553e8" kindref="member">CMLibs::Zinc::OK</ref> on success, any other value on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="205" column="5" bodyfile="auto_comments_output/streamscene.hpp" bodystart="205" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a3901fa5be093be02e29068e7cc1eab62" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CMLibs::Zinc::StreaminformationScene::getNumberOfResourcesRequired</definition>
        <argsstring>() const</argsstring>
        <name>getNumberOfResourcesRequired</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of resources required to fully export the scene. Some of the resource outputs may not be used in some cases.</para>
<para>Some formats require more than 1 resource to fully export the scene, use this function to find the number of resources required.</para>
<para><simplesect kind="return"><para>positive integer number on success, 0 on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="220" column="5" bodyfile="auto_comments_output/streamscene.hpp" bodystart="220" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a408765b6aa27065c9c0768e9f1061b55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CMLibs::Zinc::StreaminformationScene::setOverwriteSceneGraphics</definition>
        <argsstring>(int overwrite)</argsstring>
        <name>setOverwriteSceneGraphics</name>
        <param>
          <type>int</type>
          <declname>overwrite</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a flag which determines graphics should be removed before new graphics settings are imported into scene.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>overwrite</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to indicate either graphics should be overwrite. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status <ref refid="namespaceCMLibs_1_1Zinc_1af8a9881f3a06e3e24858b11ddb3f6de9a4f1327b31c1f572158bfee8728e553e8" kindref="member">CMLibs::Zinc::OK</ref> on success, any other value on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="232" column="5" bodyfile="auto_comments_output/streamscene.hpp" bodystart="232" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1af6ab10d33ea91a625198b311e30afd53" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CMLibs::Zinc::StreaminformationScene::getOutputTimeDependentVertices</definition>
        <argsstring>() const</argsstring>
        <name>getOutputTimeDependentVertices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the flag which specifies vertices should be output for each time step; The default value is 1;</para>
<para><simplesect kind="return"><para>1 if vertices are set to be output for each time step, otherwise 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="244" column="5" bodyfile="auto_comments_output/streamscene.hpp" bodystart="244" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1afd42de9653011eeb82ff2fcb31258cac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CMLibs::Zinc::StreaminformationScene::setOutputTimeDependentVertices</definition>
        <argsstring>(int outputTimeDependentVertices)</argsstring>
        <name>setOutputTimeDependentVertices</name>
        <param>
          <type>int</type>
          <declname>outputTimeDependentVertices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the flag which specifies vertices should be output for each time step; If this flag is set to 1, vertices will be output at times determined by initial_time, finish_time and number_of_time_steps set by the caller. The default value is 1;</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outputTimeDependentVertices</parametername>
</parameternamelist>
<parameterdescription>
<para>value to be assigned to the flag. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status <ref refid="namespaceCMLibs_1_1Zinc_1af8a9881f3a06e3e24858b11ddb3f6de9a4f1327b31c1f572158bfee8728e553e8" kindref="member">CMLibs::Zinc::OK</ref> on success, any other value on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="258" column="5" bodyfile="auto_comments_output/streamscene.hpp" bodystart="258" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a8bf067f56d3f084ebd10d9d7869419f3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CMLibs::Zinc::StreaminformationScene::getOutputTimeDependentColours</definition>
        <argsstring>() const</argsstring>
        <name>getOutputTimeDependentColours</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the flag which specifies colours should be output for each time step; The default value is 0;</para>
<para><simplesect kind="return"><para>1 if colours are set to be output for each time step, otherwise 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="270" column="5" bodyfile="auto_comments_output/streamscene.hpp" bodystart="270" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1ae531efe50c37e1b42f06ad599e274eb6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CMLibs::Zinc::StreaminformationScene::setOutputTimeDependentColours</definition>
        <argsstring>(int outputTimeDependentColours)</argsstring>
        <name>setOutputTimeDependentColours</name>
        <param>
          <type>int</type>
          <declname>outputTimeDependentColours</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the flag which specifies colours should be output for each time step; If this flag is set to 1, colours will be output at times determined by initial_time, finish_time and number_of_time_steps set by the caller. The default value is 0;</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outputTimeDependentColours</parametername>
</parameternamelist>
<parameterdescription>
<para>value to be assigned to the flag. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status <ref refid="namespaceCMLibs_1_1Zinc_1af8a9881f3a06e3e24858b11ddb3f6de9a4f1327b31c1f572158bfee8728e553e8" kindref="member">CMLibs::Zinc::OK</ref> on success, any other value on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="284" column="5" bodyfile="auto_comments_output/streamscene.hpp" bodystart="284" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a03e42a101a1a6dec2415fd790af9d73c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CMLibs::Zinc::StreaminformationScene::getOutputTimeDependentNormals</definition>
        <argsstring>() const</argsstring>
        <name>getOutputTimeDependentNormals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the flag which specifies normals should be output for each time step; The default value is 0;</para>
<para><simplesect kind="return"><para>1 if normals are set to be output for each time step, otherwise 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="296" column="5" bodyfile="auto_comments_output/streamscene.hpp" bodystart="296" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a30244f1b40b90069e389dfa927a182a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CMLibs::Zinc::StreaminformationScene::setOutputTimeDependentNormals</definition>
        <argsstring>(int outputTimeDependentNormals)</argsstring>
        <name>setOutputTimeDependentNormals</name>
        <param>
          <type>int</type>
          <declname>outputTimeDependentNormals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the flag which specifies normals should be output for each time step; If this flag is set to 1, normals will be output at times determined by initial_time, finish_time and number_of_time_steps set by the caller. The default value is 0;</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outputTimeDependentNormals</parametername>
</parameternamelist>
<parameterdescription>
<para>value to be assigned to the flag. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status <ref refid="namespaceCMLibs_1_1Zinc_1af8a9881f3a06e3e24858b11ddb3f6de9a4f1327b31c1f572158bfee8728e553e8" kindref="member">CMLibs::Zinc::OK</ref> on success, any other value on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="310" column="5" bodyfile="auto_comments_output/streamscene.hpp" bodystart="310" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a6001e376a26d18d4bd37efb79323af77" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CMLibs::Zinc::StreaminformationScene::getOutputIsInline</definition>
        <argsstring>() const</argsstring>
        <name>getOutputIsInline</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the flag which specifies if resources should be inlined into one file.</para>
<para><simplesect kind="return"><para>1 if normals are set to be output for each time step, otherwise 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Return the C handle of the derived <ref refid="classCMLibs_1_1Zinc_1_1StreaminformationScene" kindref="compound">StreaminformationScene</ref> object.</para>
<para><simplesect kind="return"><para>C handle of the derived <ref refid="classCMLibs_1_1Zinc_1_1StreaminformationScene" kindref="compound">StreaminformationScene</ref> if this objects is valid, 0 otherwise.</para>
</simplesect>
</para>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="321" column="5" bodyfile="auto_comments_output/streamscene.hpp" bodystart="321" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a0e5cfcd3dc7469ef928be87439e6a904" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CMLibs::Zinc::StreaminformationScene::setOutputIsInline</definition>
        <argsstring>(int outputIsInline)</argsstring>
        <name>setOutputIsInline</name>
        <param>
          <type>int</type>
          <declname>outputIsInline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the flag which specifies if the resource should be inlined into one file. This option is only applicatble to ThreeJS export only.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outputIsInline</parametername>
</parameternamelist>
<parameterdescription>
<para>value to be assigned to the flag. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status <ref refid="namespaceCMLibs_1_1Zinc_1af8a9881f3a06e3e24858b11ddb3f6de9a4f1327b31c1f572158bfee8728e553e8" kindref="member">CMLibs::Zinc::OK</ref> on success, any other value on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Return the C handle of the derived <ref refid="classCMLibs_1_1Zinc_1_1StreaminformationScene" kindref="compound">StreaminformationScene</ref> object.</para>
<para><simplesect kind="return"><para>C handle of the derived <ref refid="classCMLibs_1_1Zinc_1_1StreaminformationScene" kindref="compound">StreaminformationScene</ref> if this objects is valid, 0 otherwise.</para>
</simplesect>
</para>
        </inbodydescription>
        <location file="auto_comments_output/streamscene.hpp" line="338" column="5" bodyfile="auto_comments_output/streamscene.hpp" bodystart="338" bodyend="346"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A scene-specific stream information object. </para>
    </briefdescription>
    <detaileddescription>
<para>A scene-specific stream information object, used to specify one or more files/resources for a scene to write to, with attributes specified for them globally.</para>
<para><simplesect kind="see"><para><ref refid="classCMLibs_1_1Zinc_1_1Scene_1acf57f60fb68464fcd216cc7e7d19296a" kindref="member">Scene::createStreaminformationScene</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>CMLibs::Zinc::StreaminformationScene</label>
        <link refid="classCMLibs_1_1Zinc_1_1StreaminformationScene"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>CMLibs::Zinc::Streaminformation</label>
        <link refid="classCMLibs_1_1Zinc_1_1Streaminformation"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>CMLibs::Zinc::StreaminformationScene</label>
        <link refid="classCMLibs_1_1Zinc_1_1StreaminformationScene"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>CMLibs::Zinc::Streaminformation</label>
        <link refid="classCMLibs_1_1Zinc_1_1Streaminformation"/>
      </node>
    </collaborationgraph>
    <location file="auto_comments_output/streamscene.hpp" line="32" column="1" bodyfile="auto_comments_output/streamscene.hpp" bodystart="31" bodyend="347"/>
    <listofallmembers>
      <member refid="classCMLibs_1_1Zinc_1_1Streaminformation_1ac34bdeb92766895cfdeba63af238c6e7" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>castImage</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Streaminformation_1ada4e8d8e22da2bd0ec7602b795bf6ddb" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>castRegion</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Streaminformation_1a5f4ffb13c6f36ac3e015b4921d72b64c" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>castScene</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Streaminformation_1a33ce88ff504baefbde71fe1078e0ab97" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>createStreamresourceFile</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Streaminformation_1a470001cec2f57a069ad399fb97c583cb" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>createStreamresourceMemory</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Streaminformation_1afd09ff3d22436d0fa6ec48f1d2c6062c" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>createStreamresourceMemoryBuffer</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Streaminformation_1a81656c2dbc52ac72a4a14959e9e9494d" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>createStreamresourceMemoryBufferCopy</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Streaminformation_1a48ee8e95649aa6762a94998e21e258aaacecc9b43f09c67a73069cdcc8b360451" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>DATA_COMPRESSION_TYPE_BZ2</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Streaminformation_1a48ee8e95649aa6762a94998e21e258aaa2757cfd5924259928775b4fb4919ddc3" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>DATA_COMPRESSION_TYPE_DEFAULT</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Streaminformation_1a48ee8e95649aa6762a94998e21e258aaae001aaab544252b9ab6e60edf08caae3" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>DATA_COMPRESSION_TYPE_GZIP</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Streaminformation_1a48ee8e95649aa6762a94998e21e258aaa02d593f275b7d5386245361e3f0a83ff" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>DATA_COMPRESSION_TYPE_INVALID</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Streaminformation_1a48ee8e95649aa6762a94998e21e258aaa2f3de29afcde36b8e8cae8bd7fc24b25" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>DATA_COMPRESSION_TYPE_NONE</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Streaminformation_1a48ee8e95649aa6762a94998e21e258aa" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>DataCompressionType</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Streaminformation_1aa969e89d3801fdad9ed1d2b725d940dd" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>getDataCompressionType</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a107b19a59a36e137299a9090ea4c4197" prot="private" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>getDerivedId</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a12aa58ba6649726d2a555dcc640f8e1c" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>getFinishTime</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Streaminformation_1a18f2dbdae57889318e200edc5e8c26b4" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>getId</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a54db6c294d406e1a5d1d69afad5dae81" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>getInitialTime</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1af99af99f99986ebd6fb982972eb23ef7" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>getIODataType</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a39ddef9c6b516d3a3d7d4b7402517d3b" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>getIOFormat</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a3901fa5be093be02e29068e7cc1eab62" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>getNumberOfResourcesRequired</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a1bd4b35897dfc281efffa8487f1ad5e0" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>getNumberOfTimeSteps</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a6001e376a26d18d4bd37efb79323af77" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>getOutputIsInline</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a8bf067f56d3f084ebd10d9d7869419f3" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>getOutputTimeDependentColours</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a03e42a101a1a6dec2415fd790af9d73c" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>getOutputTimeDependentNormals</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1af6ab10d33ea91a625198b311e30afd53" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>getOutputTimeDependentVertices</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Streaminformation_1a64c561ae3e5491b320cd8c156da365b2" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>getResourceDataCompressionType</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a6a1849e5a4a3337dfede0c1913e09d66" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>getScenefilter</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Streaminformation_1a67724ea33aaf0b55e0e4807b3426fe3f" prot="protected" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>id</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a06001430a3d0d27aa00f618ae044b2a1a34c0d16de4add6ba4db7ba5a78acf019" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>IO_DATA_TYPE_COLOUR</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a06001430a3d0d27aa00f618ae044b2a1a66a22e2ec7004ea3583aa1b99f447d00" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>IO_DATA_TYPE_INVALID</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a06001430a3d0d27aa00f618ae044b2a1ae4323a2c15a871a6f3bf3179ebce99d5" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>IO_DATA_TYPE_PER_FACE_VALUE</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a06001430a3d0d27aa00f618ae044b2a1aad5b9ab1724c0da5111878af9bc80421" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>IO_DATA_TYPE_PER_VERTEX_VALUE</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1aa4dc541fe93b2719f9a620b5c1f8033fa4565f19ca4885e4121f18be90a1b31bb" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>IO_FORMAT_ASCII_STL</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1aa4dc541fe93b2719f9a620b5c1f8033faafa027455cd68e08dec8ea3ea3f883ac" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>IO_FORMAT_DESCRIPTION</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1aa4dc541fe93b2719f9a620b5c1f8033fa74ba52bf3e708b3e3a18cb060378c7a2" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>IO_FORMAT_INVALID</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1aa4dc541fe93b2719f9a620b5c1f8033fae17fc69790b739fb525cab796e4b44aa" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>IO_FORMAT_THREEJS</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1aa4dc541fe93b2719f9a620b5c1f8033fad13a41ecee0ded665e685167dccd4bac" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>IO_FORMAT_WAVEFRONT</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a06001430a3d0d27aa00f618ae044b2a1" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>IODataType</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1aa4dc541fe93b2719f9a620b5c1f8033f" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>IOFormat</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a94733986c87e838106bd14c838cc2b62" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>isValid</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Streaminformation_1aa8f9d159d4d6b1ba9d8435d6ed3627d5" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>operator=</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a032858ae1fe02d2d1170981c2af2d67c" prot="private" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>Scene</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Streaminformation_1a1f8a0fd5b65bfbee1ed1594e670f914a" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>setDataCompressionType</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a3a1feadafd2b0519a38c71ca7a35a3fc" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>setFinishTime</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1ae32d7fd09992702e7b5b826f0ad0b123" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>setInitialTime</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1ab4d8c3e14111f0a54dbb9012b8bc17d8" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>setIODataType</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a5f91c28eb7108592cd1688eddf721279" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>setIOFormat</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1acb14e99662d53263af7b5df732a3fd44" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>setNumberOfTimeSteps</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a0e5cfcd3dc7469ef928be87439e6a904" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>setOutputIsInline</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1ae531efe50c37e1b42f06ad599e274eb6" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>setOutputTimeDependentColours</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a30244f1b40b90069e389dfa927a182a3" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>setOutputTimeDependentNormals</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1afd42de9653011eeb82ff2fcb31258cac" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>setOutputTimeDependentVertices</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a408765b6aa27065c9c0768e9f1061b55" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>setOverwriteSceneGraphics</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Streaminformation_1aff3c317760b8a77f472dfd5b94bb21b8" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>setResourceDataCompressionType</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a51bab814620d4a36ea9c2657fd297483" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>setScenefilter</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Streaminformation_1a0a73d80ee4e2d630ab82ab1fbe4b475e" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>Streaminformation</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Streaminformation_1aabc9ad5f8451bc500f03f5bc8edd5ebc" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>Streaminformation</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Streaminformation_1ac804a8fe148efb5a102c9f9657c44797" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>Streaminformation</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1a4156eab026abb0162c2e4073c6f05afd" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>StreaminformationScene</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1StreaminformationScene_1afd9774161b69244dc44c7c9bc69ada04" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>StreaminformationScene</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Streaminformation_1a8379a9df28c8078a10681962584b8271" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::StreaminformationScene</scope><name>~Streaminformation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
