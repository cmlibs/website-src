<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classCMLibs_1_1Zinc_1_1Loggerevent" kind="class" language="C++" prot="public">
    <compoundname>CMLibs::Zinc::Loggerevent</compoundname>
    <includes refid="logger_8hpp" local="no">logger.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classCMLibs_1_1Zinc_1_1Loggerevent_1ae0cd79b59340c15db38ba5ef6005ef53" prot="protected" static="no" mutable="no">
        <type>cmzn_loggerevent_id</type>
        <definition>cmzn_loggerevent_id CMLibs::Zinc::Loggerevent::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/logger.hpp" line="200" column="21" bodyfile="auto_comments_output/logger.hpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Loggerevent_1aa0834fe70a751c59ac6138ab4f3bde69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CMLibs::Zinc::Loggerevent::Loggerevent</definition>
        <argsstring>()</argsstring>
        <name>Loggerevent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/logger.hpp" line="204" column="1" bodyfile="auto_comments_output/logger.hpp" bodystart="204" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Loggerevent_1abf823e4e21cb15d198bb7129113c1445" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CMLibs::Zinc::Loggerevent::Loggerevent</definition>
        <argsstring>(cmzn_loggerevent_id in_logger_event_id)</argsstring>
        <name>Loggerevent</name>
        <param>
          <type>cmzn_loggerevent_id</type>
          <declname>in_logger_event_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/logger.hpp" line="208" column="10" bodyfile="auto_comments_output/logger.hpp" bodystart="208" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Loggerevent_1a58e199af9358e07abdd502744146cbec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CMLibs::Zinc::Loggerevent::Loggerevent</definition>
        <argsstring>(const Loggerevent &amp;loggerEvent)</argsstring>
        <name>Loggerevent</name>
        <param>
          <type>const <ref refid="classCMLibs_1_1Zinc_1_1Loggerevent" kindref="compound">Loggerevent</ref> &amp;</type>
          <declname>loggerEvent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/logger.hpp" line="212" column="1" bodyfile="auto_comments_output/logger.hpp" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Loggerevent_1a53253423efe4c5326a85fa4d336a7e01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCMLibs_1_1Zinc_1_1Loggerevent" kindref="compound">Loggerevent</ref> &amp;</type>
        <definition>Loggerevent&amp; CMLibs::Zinc::Loggerevent::operator=</definition>
        <argsstring>(const Loggerevent &amp;loggerEvent)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classCMLibs_1_1Zinc_1_1Loggerevent" kindref="compound">Loggerevent</ref> &amp;</type>
          <declname>loggerEvent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/logger.hpp" line="216" column="13" bodyfile="auto_comments_output/logger.hpp" bodystart="216" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Loggerevent_1a4645b9f810e0c42188067c91564e3b9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CMLibs::Zinc::Loggerevent::~Loggerevent</definition>
        <argsstring>()</argsstring>
        <name>~Loggerevent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/logger.hpp" line="225" column="1" bodyfile="auto_comments_output/logger.hpp" bodystart="225" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Loggerevent_1a4d9cd7b3723ebbb748d5de6ff24070c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CMLibs::Zinc::Loggerevent::isValid</definition>
        <argsstring>() const</argsstring>
        <name>isValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if this is a valid <ref refid="classCMLibs_1_1Zinc_1_1Loggerevent" kindref="compound">Loggerevent</ref> object.</para>
<para><simplesect kind="return"><para>Status True if object is valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/logger.hpp" line="238" column="6" bodyfile="auto_comments_output/logger.hpp" bodystart="238" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Loggerevent_1a440fbf07394b93a049b93108f797a1d5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>cmzn_loggerevent_id</type>
        <definition>cmzn_loggerevent_id CMLibs::Zinc::Loggerevent::getId</definition>
        <argsstring>() const</argsstring>
        <name>getId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the C handle of the <ref refid="classCMLibs_1_1Zinc_1_1Loggerevent" kindref="compound">Loggerevent</ref> object.</para>
<para><simplesect kind="return"><para>C handle of <ref refid="classCMLibs_1_1Zinc_1_1Loggerevent" kindref="compound">Loggerevent</ref> if this objects is valid, 0 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/logger.hpp" line="248" column="21" bodyfile="auto_comments_output/logger.hpp" bodystart="248" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Loggerevent_1ab8e0e5e883c34547568990d26f02bc87" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCMLibs_1_1Zinc_1_1Logger_1a36811372b2c0ba706170d74dc6eb94e7" kindref="member">Logger::ChangeFlags</ref></type>
        <definition>Logger::ChangeFlags CMLibs::Zinc::Loggerevent::getChangeFlags</definition>
        <argsstring>() const</argsstring>
        <name>getChangeFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get logical OR of flags indicating how the logger has changed. <simplesect kind="see"><para><ref refid="classCMLibs_1_1Zinc_1_1Logger_1a59e7198109fdb28c32e1d0f904f3d82f" kindref="member">Logger::ChangeFlag</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>logger</parametername>
</parameternamelist>
<parameterdescription>
<para>The logger to query about. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The change flags summarising the change: logical OR of enum <ref refid="classCMLibs_1_1Zinc_1_1Logger_1a59e7198109fdb28c32e1d0f904f3d82f" kindref="member">Logger::ChangeFlag</ref> values. Returns CMZN_LOGGER_CHANGE_FLAG_NONE in case of invalid arguments. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/logger.hpp" line="262" column="21" bodyfile="auto_comments_output/logger.hpp" bodystart="262" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Loggerevent_1a674a911be1b9f3c935186fad422140b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCMLibs_1_1Zinc_1_1Logger_1af43adf1fcc5bc807c9889706e533f9ab" kindref="member">Logger::MessageType</ref></type>
        <definition>Logger::MessageType CMLibs::Zinc::Loggerevent::getMessageType</definition>
        <argsstring>() const</argsstring>
        <name>getMessageType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the type of the message associated with this event. <simplesect kind="see"><para><ref refid="classCMLibs_1_1Zinc_1_1Logger_1af43adf1fcc5bc807c9889706e533f9ab" kindref="member">Logger::MessageType</ref></para>
</simplesect>
<simplesect kind="return"><para>The type of the message associated with this event. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/logger.hpp" line="273" column="21" bodyfile="auto_comments_output/logger.hpp" bodystart="273" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Loggerevent_1a99def12c2e80a40b41af93e3478027ee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>char *</type>
        <definition>char* CMLibs::Zinc::Loggerevent::getMessageText</definition>
        <argsstring>() const</argsstring>
        <name>getMessageText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the message assoicated with this event. This may not neccessarily be the last message on the logger.</para>
<para><simplesect kind="return"><para>The message associated with this event. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/logger.hpp" line="284" column="6" bodyfile="auto_comments_output/logger.hpp" bodystart="284" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Loggerevent_1a2fe3ed5f77f6c03a5bad27933cdec16d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCMLibs_1_1Zinc_1_1Logger" kindref="compound">Logger</ref></type>
        <definition>Logger CMLibs::Zinc::Loggerevent::getLogger</definition>
        <argsstring>() const</argsstring>
        <name>getLogger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the logger which creates this event.</para>
<para><simplesect kind="return"><para>valid logger associated with this event, otherwise 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/logger.hpp" line="294" column="8" bodyfile="auto_comments_output/logger.hpp" bodystart="294" bodyend="297"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Information about changes to messages in the logger. </para>
    </briefdescription>
    <detaileddescription>
<para>Information about changes to messages in the logger, sent with each callback from the logger notifier. </para>
    </detaileddescription>
    <location file="auto_comments_output/logger.hpp" line="198" column="1" bodyfile="auto_comments_output/logger.hpp" bodystart="197" bodyend="299"/>
    <listofallmembers>
      <member refid="classCMLibs_1_1Zinc_1_1Loggerevent_1ab8e0e5e883c34547568990d26f02bc87" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Loggerevent</scope><name>getChangeFlags</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Loggerevent_1a440fbf07394b93a049b93108f797a1d5" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Loggerevent</scope><name>getId</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Loggerevent_1a2fe3ed5f77f6c03a5bad27933cdec16d" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Loggerevent</scope><name>getLogger</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Loggerevent_1a99def12c2e80a40b41af93e3478027ee" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Loggerevent</scope><name>getMessageText</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Loggerevent_1a674a911be1b9f3c935186fad422140b2" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Loggerevent</scope><name>getMessageType</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Loggerevent_1ae0cd79b59340c15db38ba5ef6005ef53" prot="protected" virt="non-virtual"><scope>CMLibs::Zinc::Loggerevent</scope><name>id</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Loggerevent_1a4d9cd7b3723ebbb748d5de6ff24070c8" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Loggerevent</scope><name>isValid</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Loggerevent_1aa0834fe70a751c59ac6138ab4f3bde69" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Loggerevent</scope><name>Loggerevent</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Loggerevent_1abf823e4e21cb15d198bb7129113c1445" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Loggerevent</scope><name>Loggerevent</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Loggerevent_1a58e199af9358e07abdd502744146cbec" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Loggerevent</scope><name>Loggerevent</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Loggerevent_1a53253423efe4c5326a85fa4d336a7e01" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Loggerevent</scope><name>operator=</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Loggerevent_1a4645b9f810e0c42188067c91564e3b9b" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Loggerevent</scope><name>~Loggerevent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
