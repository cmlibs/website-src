<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier" kind="class" language="C++" prot="public">
    <compoundname>CMLibs::Zinc::Fieldmodulenotifier</compoundname>
    <includes refid="fieldmodule_8hpp" local="no">fieldmodule.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier_1a7bec5c6f949c43556871382c28b2fe1d" prot="protected" static="no" mutable="no">
        <type>cmzn_fieldmodulenotifier_id</type>
        <definition>cmzn_fieldmodulenotifier_id CMLibs::Zinc::Fieldmodulenotifier::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/fieldmodule.hpp" line="1697" column="29" bodyfile="auto_comments_output/fieldmodule.hpp" bodystart="1697" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier_1a85716da623f02dab4c75250e559b3efa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CMLibs::Zinc::Fieldmodulenotifier::Fieldmodulenotifier</definition>
        <argsstring>()</argsstring>
        <name>Fieldmodulenotifier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/fieldmodule.hpp" line="1701" column="1" bodyfile="auto_comments_output/fieldmodule.hpp" bodystart="1701" bodyend="1702"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier_1a8347d9abdce18c54ca6cca505ba163a0" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CMLibs::Zinc::Fieldmodulenotifier::Fieldmodulenotifier</definition>
        <argsstring>(cmzn_fieldmodulenotifier_id in_fieldmodulenotifier_id)</argsstring>
        <name>Fieldmodulenotifier</name>
        <param>
          <type>cmzn_fieldmodulenotifier_id</type>
          <declname>in_fieldmodulenotifier_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/fieldmodule.hpp" line="1705" column="10" bodyfile="auto_comments_output/fieldmodule.hpp" bodystart="1705" bodyend="1707"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier_1acab30e61d99cbaba92565d235c7880e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CMLibs::Zinc::Fieldmodulenotifier::Fieldmodulenotifier</definition>
        <argsstring>(const Fieldmodulenotifier &amp;fieldmoduleNotifier)</argsstring>
        <name>Fieldmodulenotifier</name>
        <param>
          <type>const <ref refid="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier" kindref="compound">Fieldmodulenotifier</ref> &amp;</type>
          <declname>fieldmoduleNotifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/fieldmodule.hpp" line="1709" column="1" bodyfile="auto_comments_output/fieldmodule.hpp" bodystart="1709" bodyend="1711"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier_1ad7a9ca9be3d3a329826492170e7025c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier" kindref="compound">Fieldmodulenotifier</ref> &amp;</type>
        <definition>Fieldmodulenotifier&amp; CMLibs::Zinc::Fieldmodulenotifier::operator=</definition>
        <argsstring>(const Fieldmodulenotifier &amp;fieldmoduleNotifier)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier" kindref="compound">Fieldmodulenotifier</ref> &amp;</type>
          <declname>fieldmoduleNotifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/fieldmodule.hpp" line="1713" column="21" bodyfile="auto_comments_output/fieldmodule.hpp" bodystart="1713" bodyend="1722"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier_1a47aa0fdccb2f0cc4f1df67b88b7454a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CMLibs::Zinc::Fieldmodulenotifier::~Fieldmodulenotifier</definition>
        <argsstring>()</argsstring>
        <name>~Fieldmodulenotifier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/fieldmodule.hpp" line="1724" column="1" bodyfile="auto_comments_output/fieldmodule.hpp" bodystart="1724" bodyend="1730"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier_1ae104d4b94b6a6c1f714a343f83fba5be" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CMLibs::Zinc::Fieldmodulenotifier::isValid</definition>
        <argsstring>() const</argsstring>
        <name>isValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if this is a valid <ref refid="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier" kindref="compound">Fieldmodulenotifier</ref> object.</para>
<para><simplesect kind="return"><para>Status True if object is valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/fieldmodule.hpp" line="1737" column="6" bodyfile="auto_comments_output/fieldmodule.hpp" bodystart="1737" bodyend="1740"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier_1aea650608c070e9d5f51d29716985989b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>cmzn_fieldmodulenotifier_id</type>
        <definition>cmzn_fieldmodulenotifier_id CMLibs::Zinc::Fieldmodulenotifier::getId</definition>
        <argsstring>() const</argsstring>
        <name>getId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the C handle of the <ref refid="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier" kindref="compound">Fieldmodulenotifier</ref> object.</para>
<para><simplesect kind="return"><para>C handle of <ref refid="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier" kindref="compound">Fieldmodulenotifier</ref> if this objects is valid, 0 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/fieldmodule.hpp" line="1747" column="29" bodyfile="auto_comments_output/fieldmodule.hpp" bodystart="1747" bodyend="1750"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier_1a32633c84ece17968e4615b16edbb414d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CMLibs::Zinc::Fieldmodulenotifier::setCallback</definition>
        <argsstring>(Fieldmodulecallback &amp;callback)</argsstring>
        <name>setCallback</name>
        <param>
          <type><ref refid="classCMLibs_1_1Zinc_1_1Fieldmodulecallback" kindref="compound">Fieldmodulecallback</ref> &amp;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assign the callback function and user data for the fieldmodule notifier. This function also starts the callback.</para>
<para><simplesect kind="see"><para>cmzn_fieldmodulenotifier_callback_function </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>function to be called when event is triggered. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data_in</parametername>
</parameternamelist>
<parameterdescription>
<para>Void pointer to user object. User must ensure this object&apos;s lifetime exceeds the duration for which callbacks are active. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status <ref refid="namespaceCMLibs_1_1Zinc_1af8a9881f3a06e3e24858b11ddb3f6de9a4f1327b31c1f572158bfee8728e553e8" kindref="member">CMLibs::Zinc::OK</ref> on success, any other value on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/fieldmodule.hpp" line="1762" column="5" bodyfile="auto_comments_output/fieldmodule.hpp" bodystart="1762" bodyend="1765"/>
      </memberdef>
      <memberdef kind="function" id="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier_1a42e7ce1299784765b56b18351cae783c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CMLibs::Zinc::Fieldmodulenotifier::clearCallback</definition>
        <argsstring>()</argsstring>
        <name>clearCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stop and clear field module callback. This will stop the callback and also remove the callback function from the fieldmodule notifier.</para>
<para><simplesect kind="return"><para>Status <ref refid="namespaceCMLibs_1_1Zinc_1af8a9881f3a06e3e24858b11ddb3f6de9a4f1327b31c1f572158bfee8728e553e8" kindref="member">CMLibs::Zinc::OK</ref> on success, any other value on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="auto_comments_output/fieldmodule.hpp" line="1773" column="5" bodyfile="auto_comments_output/fieldmodule.hpp" bodystart="1773" bodyend="1776"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Manages individual user notification of changes with a field module. </para>
    </briefdescription>
    <detaileddescription>
<para>Manages individual user notification of changes with a field module. </para>
    </detaileddescription>
    <location file="auto_comments_output/fieldmodule.hpp" line="1695" column="1" bodyfile="auto_comments_output/fieldmodule.hpp" bodystart="1694" bodyend="1777"/>
    <listofallmembers>
      <member refid="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier_1a42e7ce1299784765b56b18351cae783c" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Fieldmodulenotifier</scope><name>clearCallback</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier_1a85716da623f02dab4c75250e559b3efa" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Fieldmodulenotifier</scope><name>Fieldmodulenotifier</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier_1a8347d9abdce18c54ca6cca505ba163a0" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Fieldmodulenotifier</scope><name>Fieldmodulenotifier</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier_1acab30e61d99cbaba92565d235c7880e5" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Fieldmodulenotifier</scope><name>Fieldmodulenotifier</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier_1aea650608c070e9d5f51d29716985989b" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Fieldmodulenotifier</scope><name>getId</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier_1a7bec5c6f949c43556871382c28b2fe1d" prot="protected" virt="non-virtual"><scope>CMLibs::Zinc::Fieldmodulenotifier</scope><name>id</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier_1ae104d4b94b6a6c1f714a343f83fba5be" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Fieldmodulenotifier</scope><name>isValid</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier_1ad7a9ca9be3d3a329826492170e7025c1" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Fieldmodulenotifier</scope><name>operator=</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier_1a32633c84ece17968e4615b16edbb414d" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Fieldmodulenotifier</scope><name>setCallback</name></member>
      <member refid="classCMLibs_1_1Zinc_1_1Fieldmodulenotifier_1a47aa0fdccb2f0cc4f1df67b88b7454a7" prot="public" virt="non-virtual"><scope>CMLibs::Zinc::Fieldmodulenotifier</scope><name>~Fieldmodulenotifier</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
